import {
  useLexicalComposerContext
} from "./chunk-BOFAG2GE.js";
import {
  require_react
} from "./chunk-NWEMTEYF.js";
import {
  HISTORY_MERGE_TAG
} from "./chunk-BMIPEBXK.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/.pnpm/@lexical+react@0.32.1_react_442fd0794fb432321ddc5485b4f46deb/node_modules/@lexical/react/LexicalOnChangePlugin.dev.mjs
var import_react = __toESM(require_react(), 1);
var CAN_USE_DOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var useLayoutEffectImpl = CAN_USE_DOM ? import_react.useLayoutEffect : import_react.useEffect;
function OnChangePlugin({
  ignoreHistoryMergeTagChange = true,
  ignoreSelectionChange = false,
  onChange
}) {
  const [editor] = useLexicalComposerContext();
  useLayoutEffectImpl(() => {
    if (onChange) {
      return editor.registerUpdateListener(({
        editorState,
        dirtyElements,
        dirtyLeaves,
        prevEditorState,
        tags
      }) => {
        if (ignoreSelectionChange && dirtyElements.size === 0 && dirtyLeaves.size === 0 || ignoreHistoryMergeTagChange && tags.has(HISTORY_MERGE_TAG) || prevEditorState.isEmpty()) {
          return;
        }
        onChange(editorState, editor, tags);
      });
    }
  }, [editor, ignoreHistoryMergeTagChange, ignoreSelectionChange, onChange]);
  return null;
}
export {
  OnChangePlugin
};
//# sourceMappingURL=@lexical_react_LexicalOnChangePlugin.js.map
